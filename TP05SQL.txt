TP 05 – Requêtes avancées

A/Listez les articles dans l’ordre alphabétique des désignations

SELECT * 
FROM ARTICLE 
ORDER BY DESIGNATION ASC;

/////////////////////////////////////////////////////////////////////////////////////////////
B/ Listez les articles dans l’ordre des prix du plus élevé au moins élevé :

SELECT * 
FROM ARTICLE 
ORDER BY PRIX DESC;

/////////////////////////////////////////////////////////////////////////////////////////////
C/ Listez tous les articles qui sont des « boulons » et triez les résultats par ordre de prix 
ascendant:

SELECT * 
FROM ARTICLE 
WHERE DESIGNATION LIKE '%boulon%' 
ORDER BY PRIX ASC;



/////////////////////////////////////////////////////////////////////////////////////////////
D/ Listez tous les articles dont la désignation contient le mot « sachet »:

SELECT * 
FROM ARTICLE 
WHERE DESIGNATION LIKE '%sachet%';

/////////////////////////////////////////////////////////////////////////////////////////////
E/ Listez tous les articles dont la désignation contient le mot « sachet » 
indépendamment de la casse !

SELECT * 
FROM ARTICLE 
WHERE LOWER(DESIGNATION) LIKE '%sachet%';


/////////////////////////////////////////////////////////////////////////////////////////////
F/ Listez les articles avec les informations fournisseur correspondantes. Les résultats 
doivent être triées dans l’ordre alphabétique des fournisseurs et par article du prix le 
plus élevé au moins élevé:

SELECT ARTICLE.*, FOURNISSEUR.NOM 
FROM ARTICLE 
JOIN FOURNISSEUR ON ARTICLE.ID_FOU = FOURNISSEUR.ID 
ORDER BY FOURNISSEUR.NOM ASC, ARTICLE.PRIX DESC;


/////////////////////////////////////////////////////////////////////////////////////////////
G/ Listez les articles de la société « Dubois & Fils »:

SELECT ARTICLE.* 
FROM ARTICLE 
JOIN FOURNISSEUR ON ARTICLE.ID_FOU = FOURNISSEUR.ID 
WHERE FOURNISSEUR.NOM = 'Dubois & Fils';



/////////////////////////////////////////////////////////////////////////////////////////////
H/ Calculez la moyenne des prix des articles de la société « Dubois & Fils »:

SELECT AVG(ARTICLE.PRIX) AS moyenne_prix
FROM ARTICLE 
JOIN FOURNISSEUR ON ARTICLE.ID_FOU = FOURNISSEUR.ID 
WHERE FOURNISSEUR.NOM = 'Dubois & Fils';


/////////////////////////////////////////////////////////////////////////////////////////////
I/ Calculez la moyenne des prix des articles de chaque fournisseur:

SELECT FOURNISSEUR.NOM, AVG(ARTICLE.PRIX) AS moyenne_prix
FROM ARTICLE
JOIN FOURNISSEUR ON ARTICLE.ID_FOU = FOURNISSEUR.ID
GROUP BY FOURNISSEUR.NOM;



/////////////////////////////////////////////////////////////////////////////////////////////
J/ Sélectionnez tous les bons de commandes émis entre le 01/03/2019 et le 
05/04/2019 à 12h00:

SELECT * 
FROM BON 
WHERE DATE_CMDE BETWEEN '2019-03-01 00:00:00' AND '2019-04-05 12:00:00';

/////////////////////////////////////////////////////////////////////////////////////////////
K/  Sélectionnez les divers bons de commande qui contiennent des boulons:

SELECT DISTINCT BON.*
FROM BON
JOIN COMPO ON BON.ID = COMPO.ID_BON
JOIN ARTICLE ON COMPO.ID_ART = ARTICLE.ID
WHERE ARTICLE.DESIGNATION LIKE '%boulon%';


/////////////////////////////////////////////////////////////////////////////////////////////
L/ Sélectionnez les divers bons de commande qui contiennent des boulons avec le nom 
du fournisseur associé:

SELECT DISTINCT BON.*, FOURNISSEUR.NOM
FROM BON
JOIN COMPO ON BON.ID = COMPO.ID_BON
JOIN ARTICLE ON COMPO.ID_ART = ARTICLE.ID
JOIN FOURNISSEUR ON ARTICLE.ID_FOU = FOURNISSEUR.ID
WHERE ARTICLE.DESIGNATION LIKE '%boulon%';


/////////////////////////////////////////////////////////////////////////////////////////////
M/ Calculez le prix total de chaque bon de commande:

SELECT BON.ID, SUM(COMPO.QTE * ARTICLE.PRIX) AS prix_total
FROM BON
JOIN COMPO ON BON.ID = COMPO.ID_BON
JOIN ARTICLE ON COMPO.ID_ART = ARTICLE.ID
GROUP BY BON.ID;


/////////////////////////////////////////////////////////////////////////////////////////////
N/ Comptez le nombre d’articles de chaque bon de commande:

SELECT BON.ID, COUNT(COMPO.ID_ART) AS nombre_articles
FROM BON
JOIN COMPO ON BON.ID = COMPO.ID_BON
GROUP BY BON.ID;

/////////////////////////////////////////////////////////////////////////////////////////////
O/ Affichez les numéros de bons de commande qui contiennent plus de 25 articles et 
affichez le nombre d’articles de chacun de ces bons de commande:

SELECT BON.NUMERO, COUNT(COMPO.ID_ART) AS nombre_articles
FROM BON
JOIN COMPO ON BON.ID = COMPO.ID_BON
GROUP BY BON.NUMERO
HAVING COUNT(COMPO.ID_ART) > 25;

///////////////////////////////////////////////////////////////////////////////////////////// 
P/ Calculez le coût total des commandes effectuées sur le mois d’avril:

SELECT SUM(COMPO.QTE * ARTICLE.PRIX) AS cout_total_pour_avril
FROM BON
JOIN COMPO ON BON.ID = COMPO.ID_BON
JOIN ARTICLE ON COMPO.ID_ART = ARTICLE.ID
WHERE BON.DATE_CMDE >= '2019-04-01' AND BON.DATE_CMDE < '2019-05-01';
